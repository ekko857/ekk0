MyData <- as.matrix(read.csv("../data/PoundHillData.csv",header = FALSE))
class(MyData)
MyMetaData <- read.csv("../data/PoundHillMetaData.csv",header = TRUE,  sep=";")
class(MyMetaData)
head(MyData)
MyMetaData
View(MyMetaData)
View(MyMetaData)
MyData[MyData == " "] = 0
MyData[MyData == ""] = 0
install.packages(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
data <- read.table("/week4/data/SparrowSize.txt")
getwd()
setwd("/Users/3kko/Documents/CMEECourseWork/MyRCoursework/week4")
setwd("/Users/3kko/Documents/CMEECourseWork/week4")
getwd()
data <- read.table("/week4/data/SparrowSize.txt")
data <- read.table("/data/SparrowSize.txt")
data
a <- read.table("/data/SparrowSize.txt")
a <- read.table("data/SparrowSize.txt")
mean(a$V4)
View(a)
a <- read.table("data/SparrowSize.txt",header = F)
mean(a$V4)
View(a)
a <- read.table("data/SparrowSize.txt",header = T)
mean(a$Bill)
is.na(a$Bill) <- 0
mean(a$Bill)
a[is.na(a$Bill)] <- 0
is.na(a) <- 0
a[is.na(a$Bill)] <- 0
a[is.na(a)] <- 0
mean(a$Bill)
var(a$Bill)
sd(a$Bill)
mean(a$Mass)
var(a$Mass)
sd(a$Mass)
mean(a$Wing)
?hist
hist(a$Mass)
a <- read.table("data/SparrowSize.txt",header = T)
mean(a$Bill,na.rm = T)
hist(a$Mass)
hist(a$Mass, mass = "mass")
hist(a$Mass, x = "mass")
hist(a$Mass, xlab = "mass")
mean(a$Bill,na.rm = T)
var(a$Bill,na.rm = T)
sd(a$Bill,na.rm = T)
mean(a$Mass,na.rm = T)
var(a$Mass,na.rm = T)
sd(a$Mass,na.rm = T)
mean(a$Wing,na.rm = T)
var(a$Wing,na.rm = T)
sa(a$Wing,na.rm = T)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" )
hist(a$Wing, xlab = "wing length")
mean(a$Bill,na.rm = T)
var(a$Bill,na.rm = T)
sd(a$Bill,na.rm = T)
mean(a$Mass,na.rm = T)
var(a$Mass,na.rm = T)
sd(a$Mass,na.rm = T)
mean(a$Wing,na.rm = T)
var(a$Wing,na.rm = T)
sd(a$Wing,na.rm = T)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" )
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,breaks = 3)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,breaks = 3)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,breaks = 3)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,  breaks = 3)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,  breaks = 30)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,  breaks = 300)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,  breaks = 300)
hist(a$Wing, xlab = "wing length", breaks = 300)
hist(a$Tarsus, xlab = "trasus", breaks = 300)
hist(a$Bill, xlab = "bill length", breaks = 300)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,  breaks = 300)
hist(a$Wing, xlab = "wing length", breaks = 300)
hist(a$Tarsus, xlab = "trasus", breaks = 300)
hist(a$Bill, xlab = "bill length", breaks = 300)
par(mfrow= c(2,2))
hist(a$Mass, xlab = "body mass" ,  breaks = 300)
hist(a$Wing, xlab = "wing length", breaks = 30)
hist(a$Tarsus, xlab = "trasus", breaks = 300)
hist(a$Bill, xlab = "bill length", breaks = 300)
library(dplyr)
require(dplyr)
TarsusTally <- a %>% count(Tarsus.rounded, sort=TRUE)
install.packages('dplyr')
install.packages("dplyr")
require('dplyr')
TarsusTally <- a %>% count(Tarsus.rounded, sort=TRUE)
d$Tarsus.rounded<-round(d$Tarsus, digits=1) head(d$Tarsus.rounded)
a$Tarsus.rounded<-round(d$Tarsus, digits=1) head(d$Tarsus.rounded)
a$Tarsus.rounded <- round(a$Tarsus, digits = 1)
head(a$Tarsus.rounded)
TarsusTally <- count(a$Tarsus.rounded, sort = T)
TarsusTally <- a %<% count(Tarsus.rounded,sort = T)
TarsusTally <- a %>% count(Tarsus.rounded,sort = T)
TarsusTally <- count(a,"Tarsus.rounded", sort = T)
TarsusTally
TarsusTally
TarsusTally <- a %>% count(Tarsus.rounded, sort=TRUE)
TarsusTally
TarsusTally <- count(a,"Tarsus.rounded", sort = T)
TarsusTally
TarsusTally <- count(a,Tarsus.rounded, sort = T)
TarsusTally
a2 <- subset(a, !is.na(a$Tarsus))
nrow(a) - nrow(a2)
mean(d$BirdID)
mean(a$BirdID)
mean(a$BirdIDFact)
a$BirdIDFact <- as.factor(a$BirdID)
mean(a$BirdIDFact)
a$BirdIDFact
plot(a$Mass~a$Year, xlab="Year", ylab="House sparrow body mass(g)" )
plot(a$Mass~as.factor(a$Year), xlab="Year", ylab="House sparrow body mass(g)" )
plot(a$Mass~a$Year, xlab="Year", ylab="House sparrow body mass(g)"ï¼Œbreak = 100 )
plot(a$Mass~a$Year, xlab="Year", ylab="House sparrow body mass(g)",break = 100 )
plot(a$Mass~a$Year, xlab="Year", ylab="House sparrow body mass(g)",breaks = 100)
plot(a$Mass~a$Year, xlab="Year", ylab="House sparrow body mass(g)")
plot(a$Mass~as.factor(a$Year), xlab="Year", ylab="House sparrow body mass(g)" )
plot(a$Mass~a$Year, xlab="Year", ylab="House sparrow body mass(g)")
b<-read.table("BTLD.txt", header=T) str(b)
setwd("/Users/3kko/Documents/CMEECourseWork/MyRCoursework/week4")
getwd()
b<-read.table("data/BTLD.txt", header=T) str(b)
b<-read.table("data/BTLD.txt", header=T)
str(b)
plot(b$LD.in_AprilDays.~jitter(b$Year), ylab="Laying date (April days)", xlab ="Year", pch=19, cex=0.3)
require(ggplot2)
p <- ggplot(b, aes(x=b$Year, y=b$LD.in_AprilDays.)) + geom_violin()
p
boxplot(b$LD.in_AprilDays.~b$Year, ylab="Laying date (April days)", xlab="Yea r")
boxplot(b$LD.in_AprilDays.~b$Year, ylab="Laying date (April days)", xlab="Year")
boxplot(b$LD.in_AprilDays.~b$Year, ylab="Laying date (April days)", xlab="Year")
p <- ggplot(b, aes(x=as.factor(b$Year),y=b$LD.in_AprilDays.)) + geom_violin()
p
p <- ggplot(b, aes(x=as.factor(b$Year),y=b$LD.in_AprilDays.))
p
+ geom_violin()
p
p <- ggplot(b, aes(x=as.factor(b$Year),y=b$LD.in_AprilDays.)) + geom_violin()
p
p + stat_summary(fun.data = "mean_sdl", gemo = ("point_range"))
p + stat_summary(fun.data = "mean_sdl", gemo = ("point"))
p <- ggplot(b, aes(x=as.factor(b$Year),y=b$LD.in_AprilDays.)) + geom_violin()
p + stat_summary(fun.data = "mean_sdl", gemo = ("point"))
p + stat_summary(fun.data = "mean_sdl", gemo = ("range"))
p + stat_summary(fun.data = "mean_sdl", gemo = ("point_range"))
p + stat_summary(fun.data = "mean_sdl", geom = ("point_range"))
p + stat_summary(fun.data = "mean_sdl", geom = ("point_range"))
p + stat_summary(fun.data = "mean_sdl", geom = ("pointrange"))
p + stat_summary(fun.data = "mean_sdl", geom = ("point"))
p + stat_summary(fun.data = "mean_sdl", geom = ("range"))
a <- read.csv("week3/data/trees.csv")
a <- read.csv("week3/data/trees.csv")
# from its base and angle to its top, using  the trigonometric formula
#
# height = distance * tan(radians)
#
# ARGUMENTS
# degrees:   The angle of elevation of tree
# distance:  The distance from base of tree (e.g., meters)
#
# OUTPUT
# The heights of the tree, same units as "distance"
getwd()
setwd("Users/3kko/Documents/CMEECourseWork/")
setwd("Users/3kko/Documents/CMEECourseWork")
setwd("/Users/3kko/Documents/CMEECourseWork")
a <- read.csv("week3/data/trees.csv")
a
View(a2)
# from its base and angle to its top, using  the trigonometric formula
#
# height = distance * tan(radians)
#
# ARGUMENTS
# degrees:   The angle of elevation of tree
# distance:  The distance from base of tree (e.g., meters)
#
# OUTPUT
# The heights of the tree, same units as "distance"
rm(list=ls())
setwd("/Users/3kko/Documents/CMEECourseWork")
a <- read.csv("week3/data/trees.csv")
a
View(a)
getwd()
require(WebPower)
library('Webpower')
library(Webpower)
install.packages('Webpower')
1
install.packages('WebPower')
require(WebPower)
y <- rnom(51, mean=1 , sd=1.5)
y <- rnorm(51, mean=1 , sd=1.5)
y <- rnorm(51, mean=1 , sd=1.5)
x <- seq(from=0,to=5,by=0.1)
hist(y)
plot(hist(y, breaks=10))
mean(y)
segments(x0=(mean(y)), y0=(0), x1=(mean(y)), y1=40, lty=1, col="blue")
y <- rnorm(51, mean=1 , sd=1.5)
x <- seq(from=0,to=5,by=0.1)
hist(y, breaks=10)
mean(y)
segments(x0=(mean(y)), y0=(0), x1=(mean(y)), y1=40, lty=1, col="blue")
x<-c(1,2,3,4,8) y<-c(4,3,5,7,9)
x<-c(1,2,3,4,8)
y<-c(4,3,5,7,9)
plot(x,y)
plot(y,x)
plot(x,y)
model_1 <- lm(y~x)
model_1
plot(model_1)
summary(model_1)
x<-c(1,2,3,4,8)
y<-c(4,3,5,7,9)
plot(x,y)
model_1 <- lm(y~x)
summary(model_1)
a <- read.table('week4/data/SparrowSize.txt')
a
a <- read.table('week4/data/SparrowSize.txt',header = T)
plot(a$Mass~a$Tarsus, ylab = "mass/g",xlab = "tarsus/mm",pch = 19, cex = 0.4)
plot(a$Mass,a$Tarsus, ylab = "mass/g",xlab = "tarsus/mm",pch = 19, cex = 0.4)
plot(a$Mass,a$Tarsus,pch = 19, cex = 0.4)
plot(a$Mass~a$Tarsus, ylab = "mass/g",xlab = "tarsus/mm",pch = 19, cex = 0.4)
plot(a$Mass~a$Tarsus, ylab = "mass/g",xlab = "tarsus/mm",pch = 19, cex = 0.1)
d1<-subset(d, d$Mass!="NA")
d2<-subset(d1, d1$Tarsus!="NA")
length(d2$Tarsus)
a1<-subset(a, d$Mass!="NA")
a2<-subset(a1, d1$Tarsus!="NA")
length(a2$Tarsus)
a1<-subset(a, d$Mass!="NA")
a1<-subset(a, a$Mass!="NA")
a2<-subset(a1, a1$Tarsus!="NA")
length(a2$Tarsus)
